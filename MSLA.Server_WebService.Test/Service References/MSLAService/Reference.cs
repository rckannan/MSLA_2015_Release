//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MSLA.Server_WebService.Test.MSLAService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimpleUserInfo", Namespace="http://schemas.datacontract.org/2004/07/MSLA.Server.Security")]
    [System.SerializableAttribute()]
    public partial class SimpleUserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MainDBNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid Session_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long User_IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainDBName {
            get {
                return this.MainDBNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MainDBNameField, value) != true)) {
                    this.MainDBNameField = value;
                    this.RaisePropertyChanged("MainDBName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Session_ID {
            get {
                return this.Session_IDField;
            }
            set {
                if ((this.Session_IDField.Equals(value) != true)) {
                    this.Session_IDField = value;
                    this.RaisePropertyChanged("Session_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long User_ID {
            get {
                return this.User_IDField;
            }
            set {
                if ((this.User_IDField.Equals(value) != true)) {
                    this.User_IDField = value;
                    this.RaisePropertyChanged("User_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnDataCommandType", Namespace="http://schemas.datacontract.org/2004/07/MSLA.Server.Data")]
    public enum EnDataCommandType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Text = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StoredProcedure = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TableDirect = 512,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataParameter", Namespace="http://schemas.datacontract.org/2004/07/MSLA.Server.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.SimpleBOMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.DBNull))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Exception))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.FeedItem>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.FeedItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.EnDataCommandType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.DataParameter>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.DataParameter.EnDataParameterType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.DataParameter.EnParameterDirection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.DBConnectionType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.SimpleTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.MasterCriteriaBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.BrokenRule>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.BrokenRule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<System.Collections.Generic.Dictionary<string, object>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, bool>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, MSLA.Server_WebService.Test.MSLAService.SimpleTable>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, string>))]
    public partial class DataParameter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private MSLA.Server_WebService.Test.MSLAService.DataParameter.EnDataParameterType _DBTypeField;
        
        private MSLA.Server_WebService.Test.MSLAService.DataParameter.EnParameterDirection _DirectionField;
        
        private string _ParameterNameField;
        
        private byte _PrecisionField;
        
        private byte _ScaleField;
        
        private int _SizeField;
        
        private object _ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public MSLA.Server_WebService.Test.MSLAService.DataParameter.EnDataParameterType _DBType {
            get {
                return this._DBTypeField;
            }
            set {
                if ((this._DBTypeField.Equals(value) != true)) {
                    this._DBTypeField = value;
                    this.RaisePropertyChanged("_DBType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public MSLA.Server_WebService.Test.MSLAService.DataParameter.EnParameterDirection _Direction {
            get {
                return this._DirectionField;
            }
            set {
                if ((this._DirectionField.Equals(value) != true)) {
                    this._DirectionField = value;
                    this.RaisePropertyChanged("_Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _ParameterName {
            get {
                return this._ParameterNameField;
            }
            set {
                if ((object.ReferenceEquals(this._ParameterNameField, value) != true)) {
                    this._ParameterNameField = value;
                    this.RaisePropertyChanged("_ParameterName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte _Precision {
            get {
                return this._PrecisionField;
            }
            set {
                if ((this._PrecisionField.Equals(value) != true)) {
                    this._PrecisionField = value;
                    this.RaisePropertyChanged("_Precision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte _Scale {
            get {
                return this._ScaleField;
            }
            set {
                if ((this._ScaleField.Equals(value) != true)) {
                    this._ScaleField = value;
                    this.RaisePropertyChanged("_Scale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _Size {
            get {
                return this._SizeField;
            }
            set {
                if ((this._SizeField.Equals(value) != true)) {
                    this._SizeField = value;
                    this.RaisePropertyChanged("_Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public object _Value {
            get {
                return this._ValueField;
            }
            set {
                if ((object.ReferenceEquals(this._ValueField, value) != true)) {
                    this._ValueField = value;
                    this.RaisePropertyChanged("_Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="DataParameter.EnDataParameterType", Namespace="http://schemas.datacontract.org/2004/07/MSLA.Server.Data")]
        public enum EnDataParameterType : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            BigInt = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Binary = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Bit = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Char = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            DateTime = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Decimal = 5,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Float = 6,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Image = 7,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Int = 8,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Money = 9,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NChar = 10,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NText = 11,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NVarChar = 12,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Real = 13,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            UniqueIdentifier = 14,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            SmallDateTime = 15,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            SmallInt = 16,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            SmallMoney = 17,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Text = 18,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Timestamp = 19,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            TinyInt = 20,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            VarBinary = 21,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            VarChar = 22,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Variant = 23,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Xml = 25,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Udt = 29,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Structured = 30,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Date = 31,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Time = 32,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            DateTime2 = 33,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            DateTimeOffset = 34,
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="DataParameter.EnParameterDirection", Namespace="http://schemas.datacontract.org/2004/07/MSLA.Server.Data")]
        public enum EnParameterDirection : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Input = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Output = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            InputOutput = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            ReturnValue = 6,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimpleBOMaster", Namespace="http://schemas.datacontract.org/2004/07/MSLA.Server.Base")]
    [System.SerializableAttribute()]
    public partial class SimpleBOMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.BrokenRule> BrokenDeleteRulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.BrokenRule> BrokenSaveRulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MasterTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, object> PropertyBagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, bool> PropertyIsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long fldMasterItem_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid fldSerializedMaster_IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.BrokenRule> BrokenDeleteRules {
            get {
                return this.BrokenDeleteRulesField;
            }
            set {
                if ((object.ReferenceEquals(this.BrokenDeleteRulesField, value) != true)) {
                    this.BrokenDeleteRulesField = value;
                    this.RaisePropertyChanged("BrokenDeleteRules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.BrokenRule> BrokenSaveRules {
            get {
                return this.BrokenSaveRulesField;
            }
            set {
                if ((object.ReferenceEquals(this.BrokenSaveRulesField, value) != true)) {
                    this.BrokenSaveRulesField = value;
                    this.RaisePropertyChanged("BrokenSaveRules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MasterType {
            get {
                return this.MasterTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MasterTypeField, value) != true)) {
                    this.MasterTypeField = value;
                    this.RaisePropertyChanged("MasterType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object> PropertyBag {
            get {
                return this.PropertyBagField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyBagField, value) != true)) {
                    this.PropertyBagField = value;
                    this.RaisePropertyChanged("PropertyBag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, bool> PropertyIsReadOnly {
            get {
                return this.PropertyIsReadOnlyField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyIsReadOnlyField, value) != true)) {
                    this.PropertyIsReadOnlyField = value;
                    this.RaisePropertyChanged("PropertyIsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo {
            get {
                return this.UserInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserInfoField, value) != true)) {
                    this.UserInfoField = value;
                    this.RaisePropertyChanged("UserInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long fldMasterItem_ID {
            get {
                return this.fldMasterItem_IDField;
            }
            set {
                if ((this.fldMasterItem_IDField.Equals(value) != true)) {
                    this.fldMasterItem_IDField = value;
                    this.RaisePropertyChanged("fldMasterItem_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid fldSerializedMaster_ID {
            get {
                return this.fldSerializedMaster_IDField;
            }
            set {
                if ((this.fldSerializedMaster_IDField.Equals(value) != true)) {
                    this.fldSerializedMaster_IDField = value;
                    this.RaisePropertyChanged("fldSerializedMaster_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FeedItem", Namespace="http://schemas.datacontract.org/2004/07/MSLA.Server.Tools")]
    [System.SerializableAttribute()]
    public partial class FeedItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PublishedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PublishedDate {
            get {
                return this.PublishedDateField;
            }
            set {
                if ((this.PublishedDateField.Equals(value) != true)) {
                    this.PublishedDateField = value;
                    this.RaisePropertyChanged("PublishedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBConnectionType", Namespace="http://schemas.datacontract.org/2004/07/MSLA.Server.Data")]
    public enum DBConnectionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MainDB = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CompanyDB = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CompanyDMSDB = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OLTPDB = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimpleTable", Namespace="http://schemas.datacontract.org/2004/07/MSLA.Server.Data")]
    [System.SerializableAttribute()]
    public partial class SimpleTable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> ColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<System.Collections.Generic.Dictionary<string, object>> RowsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> Columns {
            get {
                return this.ColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnsField, value) != true)) {
                    this.ColumnsField = value;
                    this.RaisePropertyChanged("Columns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<System.Collections.Generic.Dictionary<string, object>> Rows {
            get {
                return this.RowsField;
            }
            set {
                if ((object.ReferenceEquals(this.RowsField, value) != true)) {
                    this.RowsField = value;
                    this.RaisePropertyChanged("Rows");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MasterCriteriaBase", Namespace="http://schemas.datacontract.org/2004/07/MSLA.Server_WebService")]
    [System.SerializableAttribute()]
    public partial class MasterCriteriaBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocMasterTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DocMaster_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, object> PropertyCollectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocMasterType {
            get {
                return this.DocMasterTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocMasterTypeField, value) != true)) {
                    this.DocMasterTypeField = value;
                    this.RaisePropertyChanged("DocMasterType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DocMaster_ID {
            get {
                return this.DocMaster_IDField;
            }
            set {
                if ((this.DocMaster_IDField.Equals(value) != true)) {
                    this.DocMaster_IDField = value;
                    this.RaisePropertyChanged("DocMaster_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object> PropertyCollection {
            get {
                return this.PropertyCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyCollectionField, value) != true)) {
                    this.PropertyCollectionField = value;
                    this.RaisePropertyChanged("PropertyCollection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo {
            get {
                return this.UserInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserInfoField, value) != true)) {
                    this.UserInfoField = value;
                    this.RaisePropertyChanged("UserInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BrokenRule", Namespace="http://schemas.datacontract.org/2004/07/MSLA.Server.Rules")]
    [System.SerializableAttribute()]
    public partial struct BrokenRule : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string _ClassNameField;
        
        private string _ClassPropertyField;
        
        private int _ErrorRowNoField;
        
        private string _GridNameField;
        
        private bool _IsWarningField;
        
        private string _RuleDescField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _ClassName {
            get {
                return this._ClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this._ClassNameField, value) != true)) {
                    this._ClassNameField = value;
                    this.RaisePropertyChanged("_ClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _ClassProperty {
            get {
                return this._ClassPropertyField;
            }
            set {
                if ((object.ReferenceEquals(this._ClassPropertyField, value) != true)) {
                    this._ClassPropertyField = value;
                    this.RaisePropertyChanged("_ClassProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _ErrorRowNo {
            get {
                return this._ErrorRowNoField;
            }
            set {
                if ((this._ErrorRowNoField.Equals(value) != true)) {
                    this._ErrorRowNoField = value;
                    this.RaisePropertyChanged("_ErrorRowNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _GridName {
            get {
                return this._GridNameField;
            }
            set {
                if ((object.ReferenceEquals(this._GridNameField, value) != true)) {
                    this._GridNameField = value;
                    this.RaisePropertyChanged("_GridName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool _IsWarning {
            get {
                return this._IsWarningField;
            }
            set {
                if ((this._IsWarningField.Equals(value) != true)) {
                    this._IsWarningField = value;
                    this.RaisePropertyChanged("_IsWarning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _RuleDesc {
            get {
                return this._RuleDescField;
            }
            set {
                if ((object.ReferenceEquals(this._RuleDescField, value) != true)) {
                    this._RuleDescField = value;
                    this.RaisePropertyChanged("_RuleDesc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MSLAService.IMSLAService")]
    public interface IMSLAService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/TryLogin", ReplyAction="http://tempuri.org/IMSLAService/TryLoginResponse")]
        MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo TryLogin(string name, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/TryLogin", ReplyAction="http://tempuri.org/IMSLAService/TryLoginResponse")]
        System.Threading.Tasks.Task<MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo> TryLoginAsync(string name, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/LogOut", ReplyAction="http://tempuri.org/IMSLAService/LogOutResponse")]
        bool LogOut(MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/LogOut", ReplyAction="http://tempuri.org/IMSLAService/LogOutResponse")]
        System.Threading.Tasks.Task<bool> LogOutAsync(MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/TryLoginMain", ReplyAction="http://tempuri.org/IMSLAService/TryLoginMainResponse")]
        MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo TryLoginMain(string name, string pwd, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/TryLoginMain", ReplyAction="http://tempuri.org/IMSLAService/TryLoginMainResponse")]
        System.Threading.Tasks.Task<MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo> TryLoginMainAsync(string name, string pwd, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/TryLoginUPA", ReplyAction="http://tempuri.org/IMSLAService/TryLoginUPAResponse")]
        MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo TryLoginUPA(string name, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/TryLoginUPA", ReplyAction="http://tempuri.org/IMSLAService/TryLoginUPAResponse")]
        System.Threading.Tasks.Task<MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo> TryLoginUPAAsync(string name, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/FillDt", ReplyAction="http://tempuri.org/IMSLAService/FillDtResponse")]
        MSLA.Server_WebService.Test.MSLAService.SimpleTable FillDt(string CmdText, MSLA.Server_WebService.Test.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.DataParameter> cmdParams, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/FillDt", ReplyAction="http://tempuri.org/IMSLAService/FillDtResponse")]
        System.Threading.Tasks.Task<MSLA.Server_WebService.Test.MSLAService.SimpleTable> FillDtAsync(string CmdText, MSLA.Server_WebService.Test.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.DataParameter> cmdParams, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/ExecuteCMM", ReplyAction="http://tempuri.org/IMSLAService/ExecuteCMMResponse")]
        System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.DataParameter> ExecuteCMM(string CmdText, MSLA.Server_WebService.Test.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.DataParameter> cmdParams, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/ExecuteCMM", ReplyAction="http://tempuri.org/IMSLAService/ExecuteCMMResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.DataParameter>> ExecuteCMMAsync(string CmdText, MSLA.Server_WebService.Test.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.DataParameter> cmdParams, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/ExecuteScalar", ReplyAction="http://tempuri.org/IMSLAService/ExecuteScalarResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.SimpleBOMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.DBNull))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.FeedItem>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.FeedItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.EnDataCommandType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.DataParameter>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.DataParameter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.DataParameter.EnDataParameterType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.DataParameter.EnParameterDirection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.DBConnectionType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.SimpleTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.MasterCriteriaBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.BrokenRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.BrokenRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<System.Collections.Generic.Dictionary<string, object>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, bool>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, MSLA.Server_WebService.Test.MSLAService.SimpleTable>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, string>))]
        object ExecuteScalar(string CmdText, MSLA.Server_WebService.Test.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.DataParameter> cmdParams, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/ExecuteScalar", ReplyAction="http://tempuri.org/IMSLAService/ExecuteScalarResponse")]
        System.Threading.Tasks.Task<object> ExecuteScalarAsync(string CmdText, MSLA.Server_WebService.Test.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.DataParameter> cmdParams, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/FetchBOMaster", ReplyAction="http://tempuri.org/IMSLAService/FetchBOMasterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://tempuri.org/IMSLAService/FetchBOMasterExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        MSLA.Server_WebService.Test.MSLAService.SimpleBOMaster FetchBOMaster(MSLA.Server_WebService.Test.MSLAService.MasterCriteriaBase myBOCriteria, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/FetchBOMaster", ReplyAction="http://tempuri.org/IMSLAService/FetchBOMasterResponse")]
        System.Threading.Tasks.Task<MSLA.Server_WebService.Test.MSLAService.SimpleBOMaster> FetchBOMasterAsync(MSLA.Server_WebService.Test.MSLAService.MasterCriteriaBase myBOCriteria, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/SaveBOMaster", ReplyAction="http://tempuri.org/IMSLAService/SaveBOMasterResponse")]
        MSLA.Server_WebService.Test.MSLAService.SimpleBOMaster SaveBOMaster(MSLA.Server_WebService.Test.MSLAService.SimpleBOMaster myBO, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/SaveBOMaster", ReplyAction="http://tempuri.org/IMSLAService/SaveBOMasterResponse")]
        System.Threading.Tasks.Task<MSLA.Server_WebService.Test.MSLAService.SimpleBOMaster> SaveBOMasterAsync(MSLA.Server_WebService.Test.MSLAService.SimpleBOMaster myBO, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/DeleteBOMaster", ReplyAction="http://tempuri.org/IMSLAService/DeleteBOMasterResponse")]
        MSLA.Server_WebService.Test.MSLAService.SimpleBOMaster DeleteBOMaster(MSLA.Server_WebService.Test.MSLAService.SimpleBOMaster myBO, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/DeleteBOMaster", ReplyAction="http://tempuri.org/IMSLAService/DeleteBOMasterResponse")]
        System.Threading.Tasks.Task<MSLA.Server_WebService.Test.MSLAService.SimpleBOMaster> DeleteBOMasterAsync(MSLA.Server_WebService.Test.MSLAService.SimpleBOMaster myBO, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/ResolveTablesFromFile", ReplyAction="http://tempuri.org/IMSLAService/ResolveTablesFromFileResponse")]
        System.Collections.Generic.Dictionary<string, MSLA.Server_WebService.Test.MSLAService.SimpleTable> ResolveTablesFromFile(byte[] FileStreamInfo, string FileExtension, string FilePassword, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid REquest_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/ResolveTablesFromFile", ReplyAction="http://tempuri.org/IMSLAService/ResolveTablesFromFileResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, MSLA.Server_WebService.Test.MSLAService.SimpleTable>> ResolveTablesFromFileAsync(byte[] FileStreamInfo, string FileExtension, string FilePassword, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid REquest_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/HandleException", ReplyAction="http://tempuri.org/IMSLAService/HandleExceptionResponse")]
        string HandleException(System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/HandleException", ReplyAction="http://tempuri.org/IMSLAService/HandleExceptionResponse")]
        System.Threading.Tasks.Task<string> HandleExceptionAsync(System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/InvokeMethod", ReplyAction="http://tempuri.org/IMSLAService/InvokeMethodResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.SimpleBOMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.DBNull))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.FeedItem>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.FeedItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.EnDataCommandType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.DataParameter>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.DataParameter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.DataParameter.EnDataParameterType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.DataParameter.EnParameterDirection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.DBConnectionType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.SimpleTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.MasterCriteriaBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.BrokenRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Server_WebService.Test.MSLAService.BrokenRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<System.Collections.Generic.Dictionary<string, object>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, bool>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, MSLA.Server_WebService.Test.MSLAService.SimpleTable>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, string>))]
        MSLA.Server_WebService.Test.MSLAService.SimpleTable InvokeMethod(string assemblyName, string objectNamespace, string className, System.Collections.Generic.List<object> constructorArgs, string methodName, System.Collections.Generic.List<object> methodArgs, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/InvokeMethod", ReplyAction="http://tempuri.org/IMSLAService/InvokeMethodResponse")]
        System.Threading.Tasks.Task<MSLA.Server_WebService.Test.MSLAService.SimpleTable> InvokeMethodAsync(string assemblyName, string objectNamespace, string className, System.Collections.Generic.List<object> constructorArgs, string methodName, System.Collections.Generic.List<object> methodArgs, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/GetSerivceInfo", ReplyAction="http://tempuri.org/IMSLAService/GetSerivceInfoResponse")]
        MSLA.Server_WebService.Test.MSLAService.SimpleTable GetSerivceInfo(MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/GetSerivceInfo", ReplyAction="http://tempuri.org/IMSLAService/GetSerivceInfoResponse")]
        System.Threading.Tasks.Task<MSLA.Server_WebService.Test.MSLAService.SimpleTable> GetSerivceInfoAsync(MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/GetSerivceLog", ReplyAction="http://tempuri.org/IMSLAService/GetSerivceLogResponse")]
        string GetSerivceLog(MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, string ServiceName, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/GetSerivceLog", ReplyAction="http://tempuri.org/IMSLAService/GetSerivceLogResponse")]
        System.Threading.Tasks.Task<string> GetSerivceLogAsync(MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, string ServiceName, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/GetSerivceLogFromID", ReplyAction="http://tempuri.org/IMSLAService/GetSerivceLogFromIDResponse")]
        string GetSerivceLogFromID(MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, long Service_ID, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/GetSerivceLogFromID", ReplyAction="http://tempuri.org/IMSLAService/GetSerivceLogFromIDResponse")]
        System.Threading.Tasks.Task<string> GetSerivceLogFromIDAsync(MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, long Service_ID, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/GetResultSet", ReplyAction="http://tempuri.org/IMSLAService/GetResultSetResponse")]
        System.Collections.Generic.Dictionary<long, string> GetResultSet(string collectionMember, string Filter, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, string queryText, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/GetResultSet", ReplyAction="http://tempuri.org/IMSLAService/GetResultSetResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<long, string>> GetResultSetAsync(string collectionMember, string Filter, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, string queryText, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/GetSelectValue", ReplyAction="http://tempuri.org/IMSLAService/GetSelectValueResponse")]
        long GetSelectValue(string collectionMember, string Filter, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, string queryText, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/GetSelectValue", ReplyAction="http://tempuri.org/IMSLAService/GetSelectValueResponse")]
        System.Threading.Tasks.Task<long> GetSelectValueAsync(string collectionMember, string Filter, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, string queryText, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/GetSelectText", ReplyAction="http://tempuri.org/IMSLAService/GetSelectTextResponse")]
        string GetSelectText(string collectionMember, string Filter, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, long selectedVal, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/GetSelectText", ReplyAction="http://tempuri.org/IMSLAService/GetSelectTextResponse")]
        System.Threading.Tasks.Task<string> GetSelectTextAsync(string collectionMember, string Filter, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, long selectedVal, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/GetCategoryFeed", ReplyAction="http://tempuri.org/IMSLAService/GetCategoryFeedResponse")]
        string GetCategoryFeed(long Category_ID, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/GetCategoryFeed", ReplyAction="http://tempuri.org/IMSLAService/GetCategoryFeedResponse")]
        System.Threading.Tasks.Task<string> GetCategoryFeedAsync(long Category_ID, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/GetCategoryFeedItems", ReplyAction="http://tempuri.org/IMSLAService/GetCategoryFeedItemsResponse")]
        System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.FeedItem> GetCategoryFeedItems(long Category_ID, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/GetCategoryFeedItems", ReplyAction="http://tempuri.org/IMSLAService/GetCategoryFeedItemsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.FeedItem>> GetCategoryFeedItemsAsync(long Category_ID, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/GetCategoryContract", ReplyAction="http://tempuri.org/IMSLAService/GetCategoryContractResponse")]
        MSLA.Server_WebService.Test.MSLAService.SimpleTable GetCategoryContract(long Category_ID, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/GetCategoryContract", ReplyAction="http://tempuri.org/IMSLAService/GetCategoryContractResponse")]
        System.Threading.Tasks.Task<MSLA.Server_WebService.Test.MSLAService.SimpleTable> GetCategoryContractAsync(long Category_ID, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/ContractSubscriptionService", ReplyAction="http://tempuri.org/IMSLAService/ContractSubscriptionServiceResponse")]
        bool ContractSubscriptionService(long Category_ID, string message, bool IsHTML, string Subject, byte[] FileStreamInfo, string FileName, MSLA.Server_WebService.Test.MSLAService.SimpleTable testValue, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSLAService/ContractSubscriptionService", ReplyAction="http://tempuri.org/IMSLAService/ContractSubscriptionServiceResponse")]
        System.Threading.Tasks.Task<bool> ContractSubscriptionServiceAsync(long Category_ID, string message, bool IsHTML, string Subject, byte[] FileStreamInfo, string FileName, MSLA.Server_WebService.Test.MSLAService.SimpleTable testValue, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMSLAServiceChannel : MSLA.Server_WebService.Test.MSLAService.IMSLAService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MSLAServiceClient : System.ServiceModel.ClientBase<MSLA.Server_WebService.Test.MSLAService.IMSLAService>, MSLA.Server_WebService.Test.MSLAService.IMSLAService {
        
        public MSLAServiceClient() {
        }
        
        public MSLAServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MSLAServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MSLAServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MSLAServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo TryLogin(string name, System.Guid Request_ID) {
            return base.Channel.TryLogin(name, Request_ID);
        }
        
        public System.Threading.Tasks.Task<MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo> TryLoginAsync(string name, System.Guid Request_ID) {
            return base.Channel.TryLoginAsync(name, Request_ID);
        }
        
        public bool LogOut(MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            return base.Channel.LogOut(UserInfo, Request_ID);
        }
        
        public System.Threading.Tasks.Task<bool> LogOutAsync(MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            return base.Channel.LogOutAsync(UserInfo, Request_ID);
        }
        
        public MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo TryLoginMain(string name, string pwd, System.Guid Request_ID) {
            return base.Channel.TryLoginMain(name, pwd, Request_ID);
        }
        
        public System.Threading.Tasks.Task<MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo> TryLoginMainAsync(string name, string pwd, System.Guid Request_ID) {
            return base.Channel.TryLoginMainAsync(name, pwd, Request_ID);
        }
        
        public MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo TryLoginUPA(string name, System.Guid Request_ID) {
            return base.Channel.TryLoginUPA(name, Request_ID);
        }
        
        public System.Threading.Tasks.Task<MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo> TryLoginUPAAsync(string name, System.Guid Request_ID) {
            return base.Channel.TryLoginUPAAsync(name, Request_ID);
        }
        
        public MSLA.Server_WebService.Test.MSLAService.SimpleTable FillDt(string CmdText, MSLA.Server_WebService.Test.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.DataParameter> cmdParams, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID) {
            return base.Channel.FillDt(CmdText, cmdType, cmdParams, cnType, cmdTimeout, myUser, Request_ID);
        }
        
        public System.Threading.Tasks.Task<MSLA.Server_WebService.Test.MSLAService.SimpleTable> FillDtAsync(string CmdText, MSLA.Server_WebService.Test.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.DataParameter> cmdParams, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID) {
            return base.Channel.FillDtAsync(CmdText, cmdType, cmdParams, cnType, cmdTimeout, myUser, Request_ID);
        }
        
        public System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.DataParameter> ExecuteCMM(string CmdText, MSLA.Server_WebService.Test.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.DataParameter> cmdParams, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID) {
            return base.Channel.ExecuteCMM(CmdText, cmdType, cmdParams, cnType, cmdTimeout, myUser, Request_ID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.DataParameter>> ExecuteCMMAsync(string CmdText, MSLA.Server_WebService.Test.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.DataParameter> cmdParams, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID) {
            return base.Channel.ExecuteCMMAsync(CmdText, cmdType, cmdParams, cnType, cmdTimeout, myUser, Request_ID);
        }
        
        public object ExecuteScalar(string CmdText, MSLA.Server_WebService.Test.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.DataParameter> cmdParams, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID) {
            return base.Channel.ExecuteScalar(CmdText, cmdType, cmdParams, cnType, cmdTimeout, myUser, Request_ID);
        }
        
        public System.Threading.Tasks.Task<object> ExecuteScalarAsync(string CmdText, MSLA.Server_WebService.Test.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.DataParameter> cmdParams, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID) {
            return base.Channel.ExecuteScalarAsync(CmdText, cmdType, cmdParams, cnType, cmdTimeout, myUser, Request_ID);
        }
        
        public MSLA.Server_WebService.Test.MSLAService.SimpleBOMaster FetchBOMaster(MSLA.Server_WebService.Test.MSLAService.MasterCriteriaBase myBOCriteria, System.Guid Request_ID) {
            return base.Channel.FetchBOMaster(myBOCriteria, Request_ID);
        }
        
        public System.Threading.Tasks.Task<MSLA.Server_WebService.Test.MSLAService.SimpleBOMaster> FetchBOMasterAsync(MSLA.Server_WebService.Test.MSLAService.MasterCriteriaBase myBOCriteria, System.Guid Request_ID) {
            return base.Channel.FetchBOMasterAsync(myBOCriteria, Request_ID);
        }
        
        public MSLA.Server_WebService.Test.MSLAService.SimpleBOMaster SaveBOMaster(MSLA.Server_WebService.Test.MSLAService.SimpleBOMaster myBO, System.Guid Request_ID) {
            return base.Channel.SaveBOMaster(myBO, Request_ID);
        }
        
        public System.Threading.Tasks.Task<MSLA.Server_WebService.Test.MSLAService.SimpleBOMaster> SaveBOMasterAsync(MSLA.Server_WebService.Test.MSLAService.SimpleBOMaster myBO, System.Guid Request_ID) {
            return base.Channel.SaveBOMasterAsync(myBO, Request_ID);
        }
        
        public MSLA.Server_WebService.Test.MSLAService.SimpleBOMaster DeleteBOMaster(MSLA.Server_WebService.Test.MSLAService.SimpleBOMaster myBO, System.Guid Request_ID) {
            return base.Channel.DeleteBOMaster(myBO, Request_ID);
        }
        
        public System.Threading.Tasks.Task<MSLA.Server_WebService.Test.MSLAService.SimpleBOMaster> DeleteBOMasterAsync(MSLA.Server_WebService.Test.MSLAService.SimpleBOMaster myBO, System.Guid Request_ID) {
            return base.Channel.DeleteBOMasterAsync(myBO, Request_ID);
        }
        
        public System.Collections.Generic.Dictionary<string, MSLA.Server_WebService.Test.MSLAService.SimpleTable> ResolveTablesFromFile(byte[] FileStreamInfo, string FileExtension, string FilePassword, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid REquest_ID) {
            return base.Channel.ResolveTablesFromFile(FileStreamInfo, FileExtension, FilePassword, UserInfo, REquest_ID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, MSLA.Server_WebService.Test.MSLAService.SimpleTable>> ResolveTablesFromFileAsync(byte[] FileStreamInfo, string FileExtension, string FilePassword, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid REquest_ID) {
            return base.Channel.ResolveTablesFromFileAsync(FileStreamInfo, FileExtension, FilePassword, UserInfo, REquest_ID);
        }
        
        public string HandleException(System.Guid Request_ID) {
            return base.Channel.HandleException(Request_ID);
        }
        
        public System.Threading.Tasks.Task<string> HandleExceptionAsync(System.Guid Request_ID) {
            return base.Channel.HandleExceptionAsync(Request_ID);
        }
        
        public MSLA.Server_WebService.Test.MSLAService.SimpleTable InvokeMethod(string assemblyName, string objectNamespace, string className, System.Collections.Generic.List<object> constructorArgs, string methodName, System.Collections.Generic.List<object> methodArgs, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            return base.Channel.InvokeMethod(assemblyName, objectNamespace, className, constructorArgs, methodName, methodArgs, UserInfo, Request_ID);
        }
        
        public System.Threading.Tasks.Task<MSLA.Server_WebService.Test.MSLAService.SimpleTable> InvokeMethodAsync(string assemblyName, string objectNamespace, string className, System.Collections.Generic.List<object> constructorArgs, string methodName, System.Collections.Generic.List<object> methodArgs, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            return base.Channel.InvokeMethodAsync(assemblyName, objectNamespace, className, constructorArgs, methodName, methodArgs, UserInfo, Request_ID);
        }
        
        public MSLA.Server_WebService.Test.MSLAService.SimpleTable GetSerivceInfo(MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            return base.Channel.GetSerivceInfo(UserInfo, Request_ID);
        }
        
        public System.Threading.Tasks.Task<MSLA.Server_WebService.Test.MSLAService.SimpleTable> GetSerivceInfoAsync(MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            return base.Channel.GetSerivceInfoAsync(UserInfo, Request_ID);
        }
        
        public string GetSerivceLog(MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, string ServiceName, System.Guid Request_ID) {
            return base.Channel.GetSerivceLog(UserInfo, ServiceName, Request_ID);
        }
        
        public System.Threading.Tasks.Task<string> GetSerivceLogAsync(MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, string ServiceName, System.Guid Request_ID) {
            return base.Channel.GetSerivceLogAsync(UserInfo, ServiceName, Request_ID);
        }
        
        public string GetSerivceLogFromID(MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, long Service_ID, System.Guid Request_ID) {
            return base.Channel.GetSerivceLogFromID(UserInfo, Service_ID, Request_ID);
        }
        
        public System.Threading.Tasks.Task<string> GetSerivceLogFromIDAsync(MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, long Service_ID, System.Guid Request_ID) {
            return base.Channel.GetSerivceLogFromIDAsync(UserInfo, Service_ID, Request_ID);
        }
        
        public System.Collections.Generic.Dictionary<long, string> GetResultSet(string collectionMember, string Filter, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, string queryText, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            return base.Channel.GetResultSet(collectionMember, Filter, cnType, valueMember, displayMember, queryText, UserInfo, Request_ID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<long, string>> GetResultSetAsync(string collectionMember, string Filter, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, string queryText, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            return base.Channel.GetResultSetAsync(collectionMember, Filter, cnType, valueMember, displayMember, queryText, UserInfo, Request_ID);
        }
        
        public long GetSelectValue(string collectionMember, string Filter, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, string queryText, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            return base.Channel.GetSelectValue(collectionMember, Filter, cnType, valueMember, displayMember, queryText, UserInfo, Request_ID);
        }
        
        public System.Threading.Tasks.Task<long> GetSelectValueAsync(string collectionMember, string Filter, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, string queryText, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            return base.Channel.GetSelectValueAsync(collectionMember, Filter, cnType, valueMember, displayMember, queryText, UserInfo, Request_ID);
        }
        
        public string GetSelectText(string collectionMember, string Filter, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, long selectedVal, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            return base.Channel.GetSelectText(collectionMember, Filter, cnType, valueMember, displayMember, selectedVal, UserInfo, Request_ID);
        }
        
        public System.Threading.Tasks.Task<string> GetSelectTextAsync(string collectionMember, string Filter, MSLA.Server_WebService.Test.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, long selectedVal, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            return base.Channel.GetSelectTextAsync(collectionMember, Filter, cnType, valueMember, displayMember, selectedVal, UserInfo, Request_ID);
        }
        
        public string GetCategoryFeed(long Category_ID, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            return base.Channel.GetCategoryFeed(Category_ID, UserInfo, Request_ID);
        }
        
        public System.Threading.Tasks.Task<string> GetCategoryFeedAsync(long Category_ID, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            return base.Channel.GetCategoryFeedAsync(Category_ID, UserInfo, Request_ID);
        }
        
        public System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.FeedItem> GetCategoryFeedItems(long Category_ID, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            return base.Channel.GetCategoryFeedItems(Category_ID, UserInfo, Request_ID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MSLA.Server_WebService.Test.MSLAService.FeedItem>> GetCategoryFeedItemsAsync(long Category_ID, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            return base.Channel.GetCategoryFeedItemsAsync(Category_ID, UserInfo, Request_ID);
        }
        
        public MSLA.Server_WebService.Test.MSLAService.SimpleTable GetCategoryContract(long Category_ID, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            return base.Channel.GetCategoryContract(Category_ID, UserInfo, Request_ID);
        }
        
        public System.Threading.Tasks.Task<MSLA.Server_WebService.Test.MSLAService.SimpleTable> GetCategoryContractAsync(long Category_ID, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            return base.Channel.GetCategoryContractAsync(Category_ID, UserInfo, Request_ID);
        }
        
        public bool ContractSubscriptionService(long Category_ID, string message, bool IsHTML, string Subject, byte[] FileStreamInfo, string FileName, MSLA.Server_WebService.Test.MSLAService.SimpleTable testValue, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            return base.Channel.ContractSubscriptionService(Category_ID, message, IsHTML, Subject, FileStreamInfo, FileName, testValue, UserInfo, Request_ID);
        }
        
        public System.Threading.Tasks.Task<bool> ContractSubscriptionServiceAsync(long Category_ID, string message, bool IsHTML, string Subject, byte[] FileStreamInfo, string FileName, MSLA.Server_WebService.Test.MSLAService.SimpleTable testValue, MSLA.Server_WebService.Test.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            return base.Channel.ContractSubscriptionServiceAsync(Category_ID, message, IsHTML, Subject, FileStreamInfo, FileName, testValue, UserInfo, Request_ID);
        }
    }
}
